/** This file is autogenerated using [AstGenerator.defineAst]. */
interface ExpressionVisitor<T> {
	fun visit(expression: Expression): T
}

sealed class Expression {
	fun <T> accept(visitor: ExpressionVisitor<T>): T = visitor.visit(this)

	data class Assign(val name: Token, val value: Expression): Expression()
	data class Binary(val left: Expression, val operator: Token, val right: Expression): Expression()
	data class Grouping(val expr: Expression): Expression()
	data class Literal(val value: Any?): Expression()
	data class Unary(val operator: Token, val right: Expression): Expression()
	data class Variable(val name: Token): Expression()
}
